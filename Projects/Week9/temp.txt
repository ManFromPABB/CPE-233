.data 
sseg:    .byte  0x03,0x9F,0x25,0x0D,0x99,0x49,0x41,0x1F,0x01,0x09 # LUT for 7-segs

.text 
main:  
init:   li     x14,0x11008004  # button port
        li     x15,0x1100C004  # seg port
        li     x16,0x1100C008  # an port
        li     x7,0x1100D000   # CSR
        li     x9,0x1100D004   # TC In
        li     x17,7           # ones anode display code
        li     x18,11          # tens anode display code
        li     x19,15          # blank anode display code
        li     x29,3           # used to check if count should be reversed
        li     x22,9           # used to check if regrouping is needed
        mv     x31,x0          # count tens place
        mv     x30,x0	       # count ones place
        mv     x11,x0          # interrupt status flag for display
        mv     x20,x0          # count direction flag
        la     x5,sseg         # LUT address
        la     x12,ISR         # load address of ISR into x12
        csrrw  x0,mtvec,x12    # store address as interrupt vector CSR[mtvec]
        li     x13,0xFF
        sw     x13,0(x7)
        li     x13,1
        sw     x13,0(x9)
        
        li     x10,0x8         # set bit[3] value in x10 
        csrrs  x0,mstatus,x10  # enable interrupts: set MIE in CSR[mstatus]

loop:   lb     x25,0(x14)
        bnez   x25,debounce
        j loop

debounce: j loop



ISR:    beq    x13,x0,tens
	j ones

ones:	sw     x19,0(x16)      # clear anodes
	add    x8,x5,x30       # find absolute address of sseg data
        lb     x8,0(x8)        # load sseg data
        sb     x8,0(x15)       # display sseg
        sw     x17,0(x16)      # enable anodes for ones
        xori   x13,x13,0x1
        j unmask

tens:   sw     x19,0(x16)      # clear anodes
        add    x8,x5,x31       # find absolute address of sseg data
        lb     x8,0(x8)        # load sseg data
        sb     x8,0(x15)       # display sseg
        sw     x18,0(x16)      # enable anodes for tens
        xori   x13,x13,0x1

unmask: li     x10,0x8         # set bit[3] value in x10 
        csrrs  x0,mstatus,x10  # enable interrupts: set MIE in CSR[mstatus]
        mret